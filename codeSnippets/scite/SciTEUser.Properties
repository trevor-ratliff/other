####
# tools for creating files based on templates
####
command.name.10.*=New HTML
command.save.before.10.*=3
command.mode.10.*=0
command.10.*=scite -open:$(SciteDefaultHome)/templates/html.template -saveas:$(FileDir)

command.name.11.*=New CSS
command.save.before.11.*=3
command.mode.11.*=0
command.11.*=scite -open:$(SciteDefaultHome)/templates/css.template -saveas:$(FileDir)

command.name.12.*=New JavaScript
command.save.before.12.*=3
command.mode.12.*=0
command.12.*=scite -open:$(SciteDefaultHome)/templates/js.template -saveas:$(FileDir)


####
# behavior changes
####
position.maximize=1
statusbar.visible=1
fileselector.show.hidden=1
line.margin.visible=1
line.margin.width=2+
view.whitespace=1
edge.column=80
edge.mode=2
load.on.activate=1
are.you.sure.on.reload=1
check.if.already.open=0
title.full.path=1
open.dialog.in.file.directory=1
buffers.zorder.switching=1
tabsize=4
indent.size=4
fold.highlight=1
fold.highlight.colour=#00C0C0
find.files=*.c *.cxx *.h *.cs *.aspx *.vb *.css *.js *.html *.htm
wrap.aware.home.end.keys=1
autocompleteword.automatic=1
source.files=*.asm;*.asp;*.aspx;*.c;*.cc;*.cpp;*.cxx;*.cs;*.css;*.h;*.hh;\
*.htm;*.html;*.hxx;*.hpp;*.js;*.properties;*.xml;*.xslt;*.iface;*.bat;*.e
if PLAT_WIN
	font.base=font:Verdana,size:10
	font.text=font:Lucida Sans Unicode,size:11
	font.monospace=font:Courier New,size:10
Haskell|hs||\
KeypadPlus|IDM_EXPAND|\
imports.exclude=asn1 au3 ave avenue avs baan blitzbasic bullant \
csound ecl escript flagship gap inno \
opal oscript powerpro powershell purebasic r rebol \
#imports.include=abaqus cobol cmake forth freebasic haskell

# User installed APIs
api.$(file.patterns.cmake)=$(SciteDefaultHome)\api\cmake.api
api.$(file.patterns.cpp)=$(SciteDefaultHome)\api\cpp.api;$(SciteDefaultHome)\api\opengl.api;$(SciteDefaultHome)\api\c_withdoc.api
api.$(file.patterns.cs)=$(SciteDefaultHome)\api\cs.api
api.$(file.patterns.css)=$(SciteDefaultHome)\api\css.api
api.$(file.patterns.java)=$(SciteDefaultHome)\api\java.api
api.$(file.patterns.js)=$(SciteDefaultHome)\api\javascript.api;$(SciteDefaultHome)\api\jquery.api
api.$(file.patterns.pov)=$(SciteDefaultHome)\api\pov.api

# batch block from api/others.properties
# Autocomplete and call tip settings
api.$(file.patterns.batch)=$(SciteDefaultHome)\api\batch.api;$(SciteDefaultHome)\api\batch_xp.api;$(SciteDefaultHome)\api\unxutils.api;$(SciteDefaultHome)\api\winreskit.api;$(SciteDefaultHome)\api\sysinternals.api
calltip.batch.word.characters=$(chars.alpha)$(chars.numeric)%
calltip.batch.ignorecase=1
calltip.batch.parameters.start= 
calltip.batch.parameters.separators= 
calltip.batch.end.definition=;
autocomplete.batch.ignorecase=1
autocomplete.batch.start.characters=$(chars.alpha)$(chars.numeric)%
word.characters.$(file.patterns.batch)=$(chars.alpha)$(chars.numeric)%

####
# user default styles for all languages
#  for a black background ... minimum
####
#style.*.32=$(font.base),back:#000000,fore:#ffffff
#style.*.33=back:#C0C0C0,$(font.base)
#style.*.37=fore:#939393
#caret.fore=#FFFFFF
#selection.alpha=75
#selection.back=#FFFFFF
#colour.keyword=fore:#649bff
#colour.operator=fore:#727272

### Default Text
style.*.32=$(font.base),back:#021003,fore:#d0d0d0
### Line number
style.*.33=$(font.base),back:#C0C0C0,fore:#a0a0a0
### Brace highlight
style.*.34=fore:#aaaaFF,bold
### Brace incomplete highlight
style.*.35=fore:#FF0000,bold
### Control characters
style.*.36=
### Indentation guides
style.*.37=fore:#C0C0C0,back:#FFFFFF
### other colours
caret.fore=#FFFFFF
selection.alpha=75
selection.back=#FFFFFF
colour.code.comment.box=fore:#007F00
colour.code.comment.line=fore:#007F00
colour.code.comment.doc=fore:#3F703F
colour.code.comment.nested=fore:#A0C0A0
colour.text.comment=fore:#0000FF,back:#D0F0D0
colour.other.comment=fore:#007F00
colour.embedded.comment=back:#E0EEFF
colour.embedded.js=back:#F0F0FF
colour.notused=back:#FF0000

colour.number=fore:#007F7F
colour.keyword=fore:#649bff
colour.string=fore:#7F007F
colour.char=fore:#7F007F
colour.operator=fore:#727272
colour.preproc=fore:#7F7F00
colour.error=fore:#FFFF00,back:#FF0000

####
# styles for using monospaced fonts for everything
####
font.base=$(font.monospace)
font.small=$(font.monospace)
#~ font.comment=$(font.monospace)
font.text=$(font.monospace)
#~ font.text.comment=$(font.monospace)
font.embedded.base=$(font.monospace)
#~ font.embedded.comment=$(font.monospace)
font.vbs=$(font.monospace)


####
# solarized style from https://github.com/jdearl/scite-solarized/blob/master/SciTEUser.properties
####

# Solarized colour palette
# http://ethanschoonover.com/solarized
# Give symbolic names to the set of colours used in the standard styles.
# base03 #002b36 8/4 brblack 234 #1c1c1c 15 -12 -12 0 43 54 193 100 21
# base02 #073642 0/4 black 235 #262626 20 -12 -12 7 54 66 192 90 26
# base01 #586e75 10/7 brgreen 240 #4e4e4e 45 -07 -07 88 110 117 194 25 46
# base00 #657b83 11/7 bryellow 241 #585858 50 -07 -07 101 123 131 195 23 51
# base0 #839496 12/6 brblue 244 #808080 60 -06 -03 131 148 150 186 13 59
# base1 #93a1a1 14/4 brcyan 245 #8a8a8a 65 -05 -02 147 161 161 180 9 63
# base2 #eee8d5 7/7 white 254 #d7d7af 92 -00 10 238 232 213 44 11 93
# base3 #fdf6e3 15/7 brwhite 230 #ffffd7 97 00 10 253 246 227 44 10 99
# yellow #b58900 3/3 yellow 136 #af8700 60 10 65 181 137 0 45 100 71
# orange #cb4b16 9/3 brred 166 #d75f00 50 50 55 203 75 22 18 89 80
# red #dc322f 1/1 red 160 #d70000 50 65 45 220 50 47 1 79 86
# magenta #d33682 5/5 magenta 125 #af005f 50 65 -05 211 54 130 331 74 83
# violet #6c71c4 13/5 brmagenta 61 #5f5faf 50 15 -45 108 113 196 237 45 77
# blue #268bd2 4/4 blue 33 #0087ff 55 -10 -45 38 139 210 205 82 82
# cyan #2aa198 6/6 cyan 37 #00afaf 60 -35 -05 42 161 152 175 74 63
# green #859900
#colour.base03=#002b36
colour.base03=#161705
colour.base02=#073642
colour.base01=#586e75
colour.base00=#657b83
colour.base0=#839496
colour.base1=#93a1a1
colour.base2=#eee8d5
colour.base3=#fdf6e3
colour.yellow=#b58900
colour.orange=#cb4b16
colour.red=#dc322f
colour.magenta=#d33682
colour.violet=#6c71c4
colour.blue=#268bd2
colour.cyan=#2aa198
colour.green=#859900
colour.code.comment.box=fore:$(colour.base01),italics
colour.code.comment.line=fore:$(colour.base01),italics
colour.code.comment.doc=fore:$(colour.base01),italics
colour.code.comment.nested=fore:$(colour.base01),italics
colour.text.comment=fore:$(colour.base01),italics
colour.other.comment=fore:$(colour.base01),italics
colour.embedded.comment=fore:$(colour.base01),italics
colour.embedded.js=fore:$(colour.base01)
colour.notused=fore:$(colour.base01)
# Defaults
#~ colour.number=fore:$(colour.base0)
colour.number=fore:$(colour.green)
colour.keyword=fore:$(colour.blue)
colour.string=fore:$(colour.cyan)
colour.char=fore:$(colour.base0)
colour.operator=fore:$(colour.blue)
colour.preproc=fore:$(colour.base0)
colour.error=fore:$(colour.red)
# Fold margin
fold.margin=0
fold.margin.colour=$(colour.base03)
fold.margin.highlight.colour=$(colour.base02)
# The current line
caret.line.back=#073642
# Global default styles for all languages
style.*.32=$(font.base),back:$(colour.base03),$(font.base),fore:$(colour.base0)
# Line number
style.*.33=fore:$(colour.base01),back:$(colour.base02),$(font.base)
# Brace highlight
style.*.34=fore:$(colour.red),bold
# Brace incomplete highlight
style.*.35=fore:$(colour.red),bold
# Control characters
style.*.36=
# Indentation guides
#style.*.37=fore:#586e75
style.*.37=fore:#404040


# Bash styles
# default
style.bash.8=fore:$(colour.base00)
style.bash.32=fore:$(colour.base0)


# Batch styles
# default
style.batch.0=fore:$(colour.base0)


# CSS styles
# default
style.css.32=
# White space: Visible only in View Whitespace mode (or if it has a back colour)
style.css.0=
# Selector (HTML tag)
style.css.1=$(colour.keyword)
# Class selector ([HtmlTag].classSelector)
style.css.2=
# Pseudo class (HtmlTag:pseudoClass) see "keywords2" above
style.css.3=
# Unknown Pseudo class
style.css.4=$(colour.error)
# Operator
style.css.5=$(colour.operator)
# CSS1 Property, see keywords
style.css.6=fore:$(colour.yellow)
# Unknown Property
style.css.7=$(colour.error)
# Value
style.css.8=$(colour.string)
# Comment
style.css.9=$(colour.text.comment),$(font.comment)
# ID selector (#IdSel)
style.css.10=$(colour.operator)
# "!important"
style.css.11=$(colour.error)
# At-rule (@) except @media
style.css.12=$(colour.error)
# Double quoted strings
style.css.13=$(colour.string)
# Single quoted strings
style.css.14=$(colour.string)
# CSS2 Property, see keywords3
style.css.15=fore:$(colour.yellow)
# Attribute selection ([att='val'])
style.css.16=
# CSS3 Property, see keywords4
style.css.17=fore:$(colour.yellow)
# Pseudo elements, see keywords5
style.css.18=$(colour.keyword)
# Other CSS Property, see keywords6
style.css.19=fore:$(colour.yellow)
# Other Pseudoclass, see keywords7
style.css.20=$(colour.keyword)
# Other Pseudoelement, see keywords8
style.css.21=$(colour.keyword)
# "@media"
style.css.22=$(colour.error)


# Errorlist styles
style.errorlist.0=fore:$(colour.base0)


# HTML and XML share lexing code so use the same style numbers
# Add ruby erb
file.patterns.web=*.html;*.htm;*.asp;*.shtml;*.htd;*.jsp;*.rhtml;*.erb
filter.web=Web (html htm rhtml erb asp shtml css xml docbook jsp)|$(file.patterns.web);*.css;*.xml;*.docbook|
# Text
style.hypertext.0=$(colour.char)
# Tags
style.hypertext.1=$(colour.keyword)
# Unknown Tags
style.hypertext.2=$(colour.char)
# Attributes
#style.hypertext.3=fore:$(colour.base01)
style.hypertext.3=fore:$(colour.yellow)
# Unknown Attributes
style.hypertext.4=$(colour.error)
# Numbers
style.hypertext.5=$(colour.number)
# Double quoted strings
style.hypertext.6=$(colour.string)
# Single quoted strings
style.hypertext.7=$(colour.string)
# Other inside tag
style.hypertext.8=fore:$(colour.base01)
# Comment
style.hypertext.9=$(colour.text.comment),$(font.comment)
# Entities
style.hypertext.10=fore:$(colour.base01)
# XML style tag ends '/>'
style.hypertext.11=fore:$(colour.base01)
# XML identifier start '<?'
style.hypertext.12=fore:$(colour.base01)
# XML identifier end '?>'
style.hypertext.13=fore:$(colour.base01)
# SCRIPT
style.hypertext.14=fore:$(colour.base01)
# ASP <% ... %>
style.hypertext.15=fore:$(colour.orange)
# ASP <% ... %>
style.hypertext.16=fore:$(colour.orange)
# CDATA
style.hypertext.17=$(colour.char)
# PHP
style.hypertext.18=$(colour.char)
# Unquoted values
style.hypertext.19=$(colour.char)
# JSP Comment <%-- ... --%>
style.hypertext.20=$(colour.char)
# SGML tags <! ... >
style.hypertext.21=$(colour.char)
# SGML command
style.hypertext.22=$(colour.char)
# SGML 1st param
style.hypertext.23=$(colour.char)
# SGML double string
style.hypertext.24=$(colour.char)
# SGML single string
style.hypertext.25=$(colour.char)
# SGML error
style.hypertext.26=$(colour.error)
# SGML special (#xxxx type)
style.hypertext.27=$(colour.char)
# SGML entity
style.hypertext.28=$(colour.char)
# SGML comment
style.hypertext.29=$(colour.char)
# SGML block
style.hypertext.31=$(colour.char)
# Some reasonable background colours found in the default Windows palette
# Off White #FFFBF0 Light green #C0DCC0 Light Blue #A6CAF0
# Matched Operators
style.hypertext.34=$(colour.char)
style.hypertext.35=$(colour.char)
# Embedded Javascript
fontcolour.js=
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.40=
# JS Default
style.hypertext.41=
# JS Comment
style.hypertext.42=
# JS Line Comment
style.hypertext.43=
# JS Doc comment
style.hypertext.44=
# JS Number
style.hypertext.45=
# JS Word
style.hypertext.46=
# JS Keyword
style.hypertext.47=
# JS Double quoted string
style.hypertext.48=$(colour.string)
# JS Single quoted string
style.hypertext.49=$(colour.string)
# JS Symbols
style.hypertext.50=
# JavaScript EOL
style.hypertext.51=
# JavaScript RegEx
style.hypertext.52=
# ASP Javascript
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.55=
# JS Default
style.hypertext.56=
# JS Comment
style.hypertext.57=
# JS Line Comment
style.hypertext.58=
# JS Doc comment
style.hypertext.59=
# JS Number
style.hypertext.60=
# JS Word
style.hypertext.61=
# JS Keyword
style.hypertext.62=
# JS Double quoted string
style.hypertext.63=$(colour.string)
# JS Single quoted string
style.hypertext.64=$(colour.string)
# JS Symbols
style.hypertext.65=
# JavaScript EOL
style.hypertext.66=
# JavaScript RegEx
style.hypertext.67=
# Embedded VBS
# Start
style.hypertext.70=
# Default
style.hypertext.71=
# Comment
style.hypertext.72=
# Number
style.hypertext.73=
# KeyWord
style.hypertext.74=
# String
style.hypertext.75=$(colour.string)
# Identifier
style.hypertext.76=
# Unterminated string
style.hypertext.77=$(colour.error)
# ASP VBS
# Start
style.hypertext.80=
# Default
style.hypertext.81=
# Comment
style.hypertext.82=
# Number
style.hypertext.83=
# KeyWord
style.hypertext.84=
# String
style.hypertext.85=$(colour.string)
# Identifier
style.hypertext.86=
# Unterminated string
style.hypertext.87=$(colour.error)
# Embedded Python
style.hypertext.90=
style.hypertext.91=
# Comment
style.hypertext.92=
# Number
style.hypertext.93=
# String
style.hypertext.94=$(colour.string)
# Single quoted string
style.hypertext.95=$(colour.string)
# Keyword
style.hypertext.96=$(colour.keyword)
# Triple quotes
style.hypertext.97=
# Triple double quotes
style.hypertext.98=
# Class name definition
style.hypertext.99=
# Function or method name definition
style.hypertext.100=
# Operators
style.hypertext.101=
# Identifiers
style.hypertext.102=
# PHP complex variable
style.hypertext.104=
# ASP Python
style.hypertext.105=
style.hypertext.106=
# Comment
style.hypertext.107=
# Number
style.hypertext.108=$(colour.number)
# String
style.hypertext.109=$(colour.string)
# Single quoted string
style.hypertext.110=
# Keyword
style.hypertext.111=$(colour.keyword)
# Triple quotes
style.hypertext.112=$(colour.string)
# Triple double quotes
style.hypertext.113=$(colour.string)
# Class name definition
style.hypertext.114=
# Function or method name definition
style.hypertext.115=
# Operators
style.hypertext.116=
# Identifiers
style.hypertext.117=
# PHP
# Default
style.hypertext.118=
# Double quoted String
style.hypertext.119=$(colour.string)
# Single quoted string
style.hypertext.120=$(colour.string)
# Keyword
style.hypertext.121=$(colour.keyword)
# Number
style.hypertext.122=$(colour.number)
# Variable
style.hypertext.123=
# Comment
style.hypertext.124=
# One line comment
style.hypertext.125=
# PHP variable in double quoted string
style.hypertext.126=
# PHP operator
style.hypertext.127=


# Lua styles
style.lua.32=$(font.code.base),fore:$(colour.base0)


# Makefile styles
style.makefile.0=$(font.code.base),fore:$(colour.base0)
style.makefile.2=$(font.code.base),fore:$(colour.cyan)
style.makefile.3=$(font.code.base),fore:$(colour.blue)
style.makefile.34=$(font.code.base),fore:$(colour.green)
style.makefile.35=$(font.code.base),fore:$(colour.red)


# Perl styles
style.perl.11=$(font.code.base),fore:$(colour.base00)
style.perl.32=$(font.code.base),fore:$(colour.base0)


# Properties styles
# Brace highlight
style.props.34=fore:$(colour.red),bold
# Brace incomplete highlight
style.props.35=fore:$(colour.red),bold


# Python styles
# White space
style.python.0=
# Comment
style.python.1=$(colour.text.comment)
# Number
style.python.2=$(colour.number)
# String
style.python.3=$(colour.string)
# Single quoted string
style.python.4=$(colour.string)
# Keyword
style.python.5=fore:$(colour.green)
# Triple quotes
style.python.6=$(colour.string)
# Triple double quotes
style.python.7=$(colour.string)
# Class name definition
style.python.8=$(colour.keyword)
# Function or method name definition
style.python.9=$(colour.keyword)
# Operators
style.python.10=bold
# Identifiers
style.python.11=
# Comment-blocks
style.python.12=$(colour.text.comment)
# End of line where string is not closed
style.python.13=$(colour.error)
# Highlighted identifiers
style.python.14=
# Decorators
style.python.15=fore:$(colour.base00)
# Matched Operators
style.python.34=
style.python.35=
# Braces are only matched in operator style
braces.python.style=10


# Ruby
# White space
style.ruby.0=
# Error
style.ruby.1=$(colour.error)
# Comment line
style.ruby.2=$(colour.text.comment),$(font.comment),italics
# POD
style.ruby.3=
# Number
style.ruby.4=$(colour.number)
# Word
style.ruby.5=$(colour.char),bold
# String
style.ruby.6=$(colour.string)
# Character
style.ruby.7=$(colour.string)
# Class name
style.ruby.8=fore:$(colour.yellow)
# Def name
style.ruby.9=$(colour.keyword)
# Operator
style.ruby.10=
# Identifier
style.ruby.11=
# Regex
style.ruby.12=fore:$(colour.red)
# Global
style.ruby.13=$(colour.keyword)
# Symbol
style.ruby.14=$(colour.string)
# MODULE_NAME
style.ruby.15=fore:$(colour.orange),bold
# INSTANCE_VAR
style.ruby.16=$(colour.keyword)
# CLASS_VAR
style.ruby.17=$(colour.keyword)
# BACKTICKS
style.ruby.18=fore:$(colour.red)
# DATASECTION
style.ruby.19=
# HERE_DELIM
style.ruby.20=
# HERE_Q
style.ruby.21=
# HERE_QQ
style.ruby.22=
# HERE_QX
style.ruby.23=
# STRING_Q
style.ruby.24=
# STRING_QQ
style.ruby.25=
# STRING_QX
style.ruby.26=
# STRING_QR
style.ruby.27=
# STRING_QW
style.ruby.28=
# Demoted Keyword
style.ruby.29=$(style.ruby.5),normal
# STDIN
style.ruby.30=
# STDOUT
style.ruby.31=
# STDERR
style.ruby.40=
# Matched Operators
style.ruby.34=fore:$(colour.red),bold,back:$(colour.base01)
style.ruby.35=fore:$(colour.red),bold,back:$(colour.base01)


# SQL styles
# Keyword
style.sql.5=fore:$(colour.blue),bold


# XML: eXtensible Markup Language
# For XML, there is no list of known tags or attributes so all are coloured known
# Default
style.xml.0=
# Tags
style.xml.1=
# Unknown Tags
style.xml.2=
# Attributes
style.xml.3=
# Unknown Attributes
style.xml.4=
# Numbers
style.xml.5=$(colour.number)
# Double quoted strings
style.xml.6=$(colour.string)
# Single quoted strings
style.xml.7=$(colour.string)
# Other inside tag
style.xml.8=
# Comment
style.xml.9=
# Entities
style.xml.10=
# XML style tag ends '/>'
style.xml.11=
# XML identifier start '<?'
style.xml.12=
# XML identifier end '?>'
style.xml.13=
# CDATA
style.xml.17=
# Question
style.xml.18=
# Unquoted Value
style.xml.19=
# SGML tags <! ... >
style.xml.21=
# SGML command
style.xml.22=
# SGML 1st param
style.xml.23=
# SGML double string
style.xml.24=
# SGML single string
style.xml.25=
# SGML error
style.xml.26=
# SGML special (#xxxx type)
style.xml.27=
# SGML entity
style.xml.28=
# SGML comment
style.xml.29=
# SGML block
style.xml.31=
# No brace matching in XML
braces.xml.style=31


# YAML styles
# default
style.yaml.0=$(font.text),fore:$(colour.base0)
# comment line
style.yaml.1=$(font.comment),fore:$(colour.green)
# value identifier
style.yaml.2=$(font.base),fore:$(colour.blue),bold
# keyword value
style.yaml.3=$(font.base),fore:$(colour.base00)
# numerical value
style.yaml.4=$(font.base),fore:$(colour.cyan)
# reference/repeating value
style.yaml.5=$(font.base),fore:$(colour.orange)
# document delimiting line
style.yaml.6=$(font.comment),fore:#FFFFFF,bold,back:#000088,eolfilled
# text block marker
style.yaml.7=$(font.text),fore:#333366
# syntax error marker
style.yaml.8=$(font.text),fore:#FFFFFF,italics,bold,back:#FF0000,eolfilled
